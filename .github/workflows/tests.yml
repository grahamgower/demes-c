name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  canceller:
    runs-on: ubuntu-20.04
    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

  compare-demes-python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: install libyaml
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt install libyaml-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install libyaml
          fi

      - name: build
        run: make

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: install test dependencies
        run: |
          pip install -r tests/requirements.txt

      - name: run tests
        run: make pytest

  memcheck:
    # Valgrind only runs on Linux.
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: install libyaml
        run: sudo apt install libyaml-dev

      - name: build
        run: make

      - name: install valgrind
        run: sudo apt install valgrind

      - name: memcheck
        run: make memcheck

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
    env:
      OS: ${{ matrix.os }}

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: install libyaml
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt install libyaml-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install libyaml
          fi

      - name: install md5sum
        if: runner.os == 'macOS'
        run: brew install md5sha1sum

      - name: run tests
        run: make test

      - name: upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          env_vars: OS
